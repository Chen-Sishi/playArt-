<style lang="less">
    page {
        height: 100%;
        background: #f3f3f3;
    }
    .content-bg {
        /*overflow-y: scroll;*/
        height:100%;
        /*padding-bottom:120rpx;*/
    }
    .content {
        background: #fff;
        width: 690rpx;
        margin: auto;
        padding: 0 30rpx;
        margin-bottom: 20rpx;
        z-index: 2;
    }
    .content:last-child {
        margin-bottom: 0;
    }
    .art_banner {
        width: 750rpx;
        height: 390rpx;
        display: block;
        z-index: 1;
    }
    .author-info-bg {
        position: relative;
        padding:100rpx 0 30rpx;

    }
    .author-avatar {
        width: 133rpx;
        height:133rpx;
        top: -65rpx;
        left:50%;
        transform: translatex(-50%);
        position: absolute;
        /*z-index:2;*/
    }
    .author-avatar image {
        width: 133rpx;
        height:133rpx;
        border-radius:50%;
    }
    .author-name {
        font-size: 32rpx;
        color: #353535;
        line-height: 40rpx;
        text-align: center;
        padding: 5rpx 0;
    }
    .author-job {
        font-size: 27rpx;
        color: #846650;
        line-height: 40rpx;
        text-align: center;
        padding: 5rpx 0;
    }
    .author-introduce {
        text-align: center;
        color: #666;
        font-size: 26rpx;
        line-height: 40rpx;
        overflow: hidden;
        text-overflow: ellipsis;
        display:-webkit-box;
        -webkit-box-orient:vertical;
        -webkit-line-clamp:3;
    }
    .artist-story-bg {
        display: flex;
        align-items: center;
        padding-bottom:30rpx;
        .artist-story-img {
            width: 220rpx;
            height: 180rpx;
        }
    }
    .artist-story-title {
        display:flex;
        align-items: center;
        justify-content: space-between;
        font-size:30rpx;
        color:#000;
        height:80rpx;
        line-height:80rpx;
        .story-go-icon {
            width: 17rpx;
            height: 31rpx;
        }
    }

    .artist-story {
        display: flex;
        flex-direction: column;
        justify-content:space-between;
        height: 180rpx;
        width:450rpx;
        flex: 1;
        margin-left: 20rpx;

    }
    .artist-name {
        font-size: 34rpx;
        color: #000;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
    }
    .book-icon {
        width: 33rpx;
        height: 23rpx;
    }
    .story-text {color: #666;
        font-size: 26rpx;
        line-height: 40rpx;
        overflow:hidden;
        text-overflow:ellipsis;
        display:-webkit-box;
        -webkit-box-orient:vertical;
        -webkit-line-clamp:2;

    }


    /*切换*/
    .swiper-tab{
        width: 100%;
        border-bottom: 2rpx solid #f5f5f5;
        text-align: center;
        line-height: 80rpx;
        display: flex;
        justify-content: space-around;
    }
    .swiper-tab-list{  font-size: 30rpx;
        display: inline-block;
        width: 33.33%;
        color: #777777;
    }
    .on{ color: #555; border-bottom: 5rpx solid #555;}


    /*作品*//*artwork*/
    .artwork-list-bg {
        display: flex;
        justify-content: space-between;
        margin-top: 30rpx;
        flex-wrap:wrap;
    }
    .artwork-list-bg .list {
        width: 335rpx;
        margin-bottom: 30rpx;
    }
    .artwork-list-bg .list-img {
        width: 335rpx;
        height: 335rpx;
    }
    .artwork-list-bg .title {
        font-size: 30rpx;
        color: #212121;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
    }
    .artwork-list-bg .author-icon {
        width: 24rpx;
        height: 22rpx;
        vertical-align: middle;
        margin-right: 10rpx;
    }
    .artwork-list-bg .author {
        font-size: 22rpx;
        color: #888;
        margin-top: 10rpx;
    }





    /*文章*/

    .reading-list-bg {
        display: flex;
        justify-content: space-around;
        align-items: center;
        padding: 30rpx 0;
        border-bottom: 1rpx solid #f0f0f0;
    }
    .reading-list-bg .reading-list-bg:last-child {
        border: none;
    }
    .reading-list-bg .list {
        width: 466rpx;
        height:200rpx;
        margin-right:20rpx;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }
    .reading-list-bg .hot-list {
        margin-right: 0;
        margin-left: 20rpx;
    }

    .reading-list-bg .list-title {
        font-size: 34rpx;
        color: #212121;
    }
    .reading-list-bg .list-avatar {
        width: 40rpx;
        height: 40rpx;
        vertical-align: middle;
    }
    .reading-list-bg .author {
        font-size: 22rpx;
        color: #212121;
        margin-left: 10rpx;
    }
    .reading-list-bg .list-text {
        font-size: 26rpx;
        color: #888;
        margin-top: 10rpx;
        overflow:hidden;
        text-overflow:ellipsis;
        display:-webkit-box;
        -webkit-box-orient:vertical;
        -webkit-line-clamp:2;
    }
    .reading-list-bg .list-img {
        width: 200rpx;
        height: 200rpx;
        flex: 1;
        display: block;
    }




    /*弹出层*/
    .model-bgpyq {
        background:rgba(0,0,0,0.4);
        position:fixed;
        top:0;
        left:0;
        width:100%;
        height:100%;
    }
    .model-bgpyq.show {
        opacity: 1;
    }
    .model-pyqcontent {
        position: absolute;
        top:50%;
        left: 50%;
        transform: translate(-50%,-50%);
        width: 610rpx;
        .model-pyqcontain {
            background: #fff;
            height: 860rpx;
            margin: auto;
        }
        .name {
            font-size: 38rpx;
            color: #000;
            text-align: center;
            font-weight: bold;
            margin: 20rpx auto;
        }
        .job {
            font-size: 30rpx;
            color: #000;
            text-align: center;
        }
        .model-img {
            width: 650rpx;
        }

        .info {
            display: flex;
            justify-content: space-between;
            border-top:#f1f1f1 1rpx solid;
            margin-top:20rpx;
            padding:20rpx 30rpx;
            .title {
                font-size: 30rpx;
                font-weight: bold;
                color: #000;
            }
            .text {
                color: #6b6b6b;
                font-size: 28rpx;
                flex: 1;
                margin-left: 20rpx;
            }


        }

        .share-company {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding:20rpx 30rpx;
            .share-logo {
                width: 195rpx;
                height: 195rpx;
            }
            .tips {
                font-size: 32rpx;
                color: #000;

            }
            .company {
                font-size: 34rpx;
                font-weight: bold;
                color: #000;
                margin-top: 20rpx;
            }
        }
        .share-btn {
            background: #000;
            width: 245rpx;
            height: 84rpx;
            border-radius: 42rpx;
            margin: 30rpx auto;
            font-size: 33rpx;
            color: #fff;
            text-align: center;
            line-height: 84rpx;
        }
        .share-icon {
            width: 34rpx;
            height: 36rpx;
            vertical-align: middle;
            margin-right: 20rpx;
        }
    }


    /*底部分享按钮*/

    .order-bg {
        display: flex;
        justify-content:space-between;
        align-items: center;
        margin-top: 20rpx;

    }
    .order-btn {
        width: 120rpx;
        height: 40rpx;
        line-height: 40rpx;
        font-size: 20rpx;
        text-align: center;
        color: #fff;
        background-color: rgba(230, 67, 64, 1);
        border-radius: 19rpx;
    }


    .bottom-btn-bg {
        background:rgba(255,255,255,0.7);
        border-top:#d2d2d2 1rpx solid;
        height: 120rpx;
        position: fixed;
        bottom:0;
        width: 100%;

    }

    .btn-containe {
        height: 120rpx;
        display:flex;
        justify-content:space-around;
        align-items: center;
    }
    .bottom-btn {
        width: 320rpx;
        height: 84rpx;
        line-height: 84rpx;
        font-size: 30rpx;
        color: #fff;
        border-radius: 41rpx;
        text-align: center;
    }
    .bg-846650 {
        background: #846650;
    }
    .bg-353535 {
        background: #353535;
    }
    .color-846650 {
        color: #846650;
    }
    .pd-0 {
        padding-bottom: 0!important;
    }
</style>
<template>
    <scroll-view class="content-bg {{padding ? 'pd-0':''}}" scroll-y="{{scrolly}}"  hidden="{{historyHidden}}" bindscrolltolower="lower">
        <image  src="{{ysjObj.user_cover?ysjObj.user_cover+'?imageView/2/w/375':'/images/artist/ysjbg_img.png'}}" class="art_banner"></image>
        <view class="content">
            <view class="author-info-bg">
                <view  class="author-avatar">
                    <image  src="{{ysjObj.head_url?ysjObj.head_url:'/images/artist/ysjhd_img.png'}}"></image>
                </view>
                <view class="author-name">{{ysjObj.nick_name}}</view>
                <view class="author-job">{{ysjObj.user_signature}}</view>
                <view class="author-introduce">{{ysjObj.user_desc}}</view>
            </view>


        </view>
        <view class="content"  bindtap="sendUrl(../../home/article/details?type=gsh&id={{ysjObj.content_id}})">
            <view class="artist-story-title">我的故事<image src="/images/artist/right-arrow.png" class="story-go-icon"></image></view>
            <view class="artist-story-bg" >
                <image src="{{ysjObj.cover_img}}?imageView2/1/w/220/h/180" class="artist-story-img"></image>

                <view class="artist-story">
                    <view class="artist-name">  <image src="/images/artist/book_icon.png" class="book-icon"></image> {{ysjObj.title}}</view>
                    <view class="story-text">{{ysjObj.content_desc}}</view>
                </view>
            </view>
        </view>
        <!--切换-->
        <view class="content">
            <view class="swiper-tab">
                <view class="swiper-tab-list {{selected ? 'on':''}}" bindtap="swichPro">作品</view>
                <view class="swiper-tab-list {{selected1 ? 'on':''}}" bindtap="swichArt">文章</view>
            </view>
            <!-- 作品 -->

            <view class="artwork-list-bg " hidden="{{selected1}}">
                <view class="list"  wx:for="{{pro_list}}" wx:for-item="artwork">
                    <view bindtap="sendUrl(../../home/product/details?id={{artwork.goods_id}})">
                        <image src="{{artwork.goods_pic_url}}?imageView2/1/w/335" class="list-img"></image>
                        <view class="title">{{artwork.goods_name}}</view>
                    </view>
                </view>
            </view>

            <!-- 文章 -->
            <view bindtap="sendUrl(../../home/article/details?id={{read.content_id}})"  class="reading-list-bg" wx:for="{{content_list}}" wx:for-item="read"  hidden="{{selected}}">
                <view  class="list" >
                    <view class="list-title">{{read.title}}</view>
                    <view class="list-text">{{read.content_desc}}</view>
                </view>
                <image src="{{read.cover_img}}?imageView2/1/w/200" class="list-img"></image>
            </view>
        </view>
        <view style="height:100rpx;"></view>
    </scroll-view>

    <!--分享按钮-->
    <block wx:if="{{ysjObj.upCodeOne!='0'}}">
        <view class="bottom-btn-bg" hidden="{{ysjObj.upCodeOne=='0'}}">
            <view class="btn-containe">
                <button class="bottom-btn bg-846650" open-type="share">{{ysjObj.upCodeOne}}</button>
                <button class="bottom-btn bg-353535" bindtap="shareFriends">{{ysjObj.upCodeTwo}}</button>
            </view>

        </view>
    </block>

    <view hidden="{{modelpyqHidden}}" class="model-bgpyq" bindtap="hideModel">
        <view class="model-pyqcontent">
            <canvas class="model-pyqcontain" canvas-id="myCanvas" disable-scroll="true">
                <!--<image src="http://img02.tooopen.com/images/20150928/tooopen_sy_143912755726.jpg" mode="widthFix" class="model-img"></image>-->
                <!--<view>-->
                <!--<view class="name">刘国瑞</view>-->
                <!--<view class="job">当代民间工艺家</view>-->
                <!--</view>-->
                <!--<view class="info">-->
                <!--<view class="title">-->
                <!--简介-->
                <!--</view>-->
                <!--<view class="text">-->
                <!--出身于湖北武汉手工艺世家，被称为-->
                <!--湖北民间手艺第一人，是原木微缩技-->
                <!--艺的创始人，也是全世界...-->
                <!--</view>-->
                <!--</view>-->

                <!--<view class="share-company">-->
                <!--<image src="{{qrCodeImg}}" class="share-logo"></image>-->
                <!--<view class="tips">-->
                <!--微信扫码或长按识别小程序-->
                <!--<view class="company">聚匠村</view>-->
                <!--</view>-->
                <!--</view>-->
            </canvas>
            <view class="share-btn"  bindtap="save"><image src="/images/icon-fx.png" class="share-icon"></image>保存图片</view>

        </view>

    </view>
</template>
<script>
    import wepy from 'wepy'
    import {API} from '../../../common'
    import config from '../../../config';
    export default class homepage extends wepy.page {
        config = {
            navigationBarTitleText: '匠人主页'
        }
        data = {
            padding:false,
            modelpyqHidden:true,
            user_id:null,
            nowPagewz:1,
            nowPagezp:1,
            pro_list:{},
            content_list:{},
            scrolly: true,
            scrollx: false,
            selected:true,
            selected1:false,
            ysjObj:{upCodeOne:'0'},//匠人对像
            historyHidden:true,
            qrCodeImg: config.host+'wx/main/getQrCode?path=pages/artist/homepage/artHomepage&id=',
            artwork_list:[],
        }
        components = {

        }
        computed = {


        }
        methods = {
            sendUrl:function (e) {
                let that = this;
                let page= that.getCurrentPages();
                if(page.length>=4) {
                    wx.redirectTo({
                        url: e
                    })
                }else{
                    wx.navigateTo({
                        url: e
                    })
                }
            },
            hideModel(e) {
                this.modelpyqHidden= true;
                this.scrolly = true;
            },
            shareFriends:function () {
                let that = this;
                this.modelpyqHidden= false;
                this.scrolly = false;
                const ctx = wx.createCanvasContext('myCanvas');
                wx.showToast({
                    title: '加载中',
                    icon: 'loading'
                })
                wx.downloadFile({
                    url: that.ysjObj.cover_img+'?imageView2/1/w/750/h/500',
                    success: function(res) {
                        let bannerImg = res.tempFilePath;
                        // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容
                        if (res.statusCode === 200) {
                            wx.downloadFile({
                                url: that.qrCodeImg+that.ysjObj.user_id,
                                success(res) {
                                    console.log("code", that.qrCodeImg+that.ysjObj.user_id);
                                    let codeImg = res.tempFilePath;
                                    if(res.statusCode === 200) {
                                        ctx.setFillStyle('#ffffff')
                                        ctx.fillRect(0, 0, 300, 430)
                                        ctx.drawImage(bannerImg, 0, 0, 300, 200);
                                        ctx.drawImage(codeImg, 10, 345, 70, 70);
                                        ctx.setFillStyle("#000000");
                                        ctx.setFontSize(18)
                                        ctx.setTextAlign('center')
                                        ctx.fillText(that.ysjObj.nick_name, 140, 230);
                                        //ctx.stroke();
                                        ctx.setFontSize(10, 320);
                                        ctx.setFontSize(15);
                                        ctx.fillText(that.ysjObj.user_signature, 150, 255);
                                        ctx.beginPath()
                                        ctx.setStrokeStyle("#f1f1f1");
                                        ctx.setLineWidth(1)
                                        ctx.moveTo(0, 270)
                                        ctx.lineTo(300, 270);
                                        ctx.stroke()
                                        ctx.setTextAlign('left');
                                        ctx.setFontSize(13);
                                        ctx.setFillStyle("#6b6b6b");
//                                        ctx.fillText(that.ysjObj.content_desc?that.ysjObj.content_desc:'', 19, 300);

                                        let str = that.ysjObj.content_desc;
                                        let strsub, strheight = 20;
                                        for(let i=0; i<3; i++) {
                                            strsub = str.substring(i*20, i*20 + 20);
                                            ctx.fillText(strsub, 19, 295+ i* strheight);
                                        }

                                        ctx.setFontSize(15);
                                        ctx.setFillStyle("#000000");
                                        ctx.fillText('微信扫码或长按识别小程序', 90, 370);
                                        ctx.setFontSize(17);
                                        ctx.fillText('聚匠村',90, 400);
                                        ctx.draw();
                                        wx.hideToast();
                                    }
                                }
                            });

                            //console.log(that.qrCodeImg);
//                        wx.downloadFile({
//                            url: 'https://gam.zallhy.com/860306551761903616',
//                        });
                        }
                    }
                })

            },
            save:function () {
                let that = this;
                wx.showToast({
                    title: '正在保存图片',
                    icon: 'loading'
                })
                wx.canvasToTempFilePath({
                    destWidth: 600,
                    destHeight: 860,
                    canvasId: 'myCanvas',
                    success: function (res) {
                        let imageFile = res.tempFilePath;
                        wx.getSetting({
                            fail() {
                                console.log("错误的保存");
                            },
                            success(res) {
                                if (!res.authSetting['scope.writePhotosAlbum']) {
                                    wx.authorize({
                                        scope: 'scope.writePhotosAlbum',
                                        success() {
                                            that.saveToAlbumS(imageFile);
                                        },
                                        fail() {
                                            console.log("fail");
                                        }
                                    })
                                } else {
                                    that.saveToAlbumS(imageFile);
                                }
                            }
                        })
                    },
                    fail() {//如果保存出错

                        let imageFile = that.ysjObj.shareImage;

                        that.saveToAlbum(imageFile);
                        //let that = this;
                        /*let temp=[that.ysjObj.shareImage];
                         wx.previewImage({
                         current:that.ysjObj.shareImage, // 当前显示图片的http链接
                         urls: temp
                         })*/



                    }
                });
            },
            onShareAppMessage: function () {
                return {
                    title: this.ysjObj.nick_name,
                    desc: '聚匠村',
                    path: '/pages/artist/homepage/artHomepage?id='+this.ysjObj.user_id
                }
            },
            swichPro( e ) {
                this.selected1 =false
                this.selected =true
            },
            swichArt( e ) {
                this.selected1 =true
                this.selected =false
            }



        }


        /*

         onUnload(){
         debugger
         let obj =  wx.getStorageSync('UrlData');
         let url = obj[obj.length-1].url;
         wx.redirectTo({
         url:url
         })

         }

         initURL(){

         let page= this.getCurrentPages();
         let urlData={};
         urlData.url = page[1].route;
         urlData.options=page[1].options;



         let obj =  wx.getStorageSync('UrlData');
         if(obj){

         obj.push(urlData);
         }else{

         let rootData={};
         rootData.url = page[0].route;
         rootData.options=page[0].options;
         obj=[rootData];
         obj.push(urlData);
         }
         wx.setStorageSync('UrlData', obj);
         }
         */


        events = {

        }

        lower(){
            let that=this;
            let page1 = that.nowPagewz;
            let page2 = that.nowPagezp;

            if( this.selected){//如果 是作品

                API.ysjHomezp({"user_id": that.user_id,"zp_page":page2}).then((data)=> {
                    if(data.success)
                    {
                        data.result.forEach((item)=> {
                            that.pro_list.push(item);
                        })


                        if(data.result.length>0) {
                            that.nowPagezp = ++page2;
                        }

                        that.$apply();
                    }
                })

            }else{
                API.ysjHomewz({"user_id": that.user_id,"wz_page":page1}).then((data)=> {
                    if(data.success)
                    {

                        data.result.forEach((item)=> {
                            that.content_list.push(item);
                        })


                        if(data.result.length>0) {
                            that.nowPagewz = ++page1;
                        }
                        that.$apply();
                    }
                })
            }

           /* API.ysjHome({"userId": that.user_id,"wz_page":page1,"zp_page":page2,"jtPageSize": 4}).then((data)=> {
                if(data.success)
                {
                    data.result.zpList.forEach((item)=> {
                        that.pro_list.push(item);
                    })

                    data.result.wz_List.forEach((item)=> {
                        that.content_list.push(item);
                    })

                    if(data.result.zpList.length>0) {
                        that.nowPagezp = ++page2;
                    }
                    if(data.result.wz_List.length>0) {
                        that.nowPagewz = ++page1;
                    }
                    that.$apply();
                }
            })*/

        }



        onLoad(params){
            this.modelpyqHidden=true
            //this.initURL();
            wx.showToast({
                title: '加载中',
                icon: 'loading'
            })
            var scene = decodeURIComponent(params.scene);
            if(params.scene && scene){
                params.id=scene;
            }


            if(params && params.id) {
                this.user_id=params.id;
                this.init(params.id);
            }else{
                alert("对不起！没有对应的匠人！")
            }

        }

        saveToAlbum(file) {

            let filePath=null;
            wx.downloadFile({
                url: file,
                success(res) {
                    filePath = res.tempFilePath;
                    wx.saveImageToPhotosAlbum({
                        filePath: filePath,
                        success() {
                            wx.hideLoading();
                            wx.showModal({
                                title: '成功保存图片',
                                content: '已成功为您保存图片到手机相册，请自行前往朋友圈分享',
                                showCancel: false,
                                confirmText: "我知道了",
                                success: function(res) {
                                    if (res.confirm) {
                                        console.log('用户点击确定')
                                    } else if (res.cancel) {
                                        console.log('用户点击取消')
                                    }
                                }
                            })
                        },
                        fail() {
                            console.log("fail");
                        }
                    })

                }
            })






        }

        saveToAlbumS(file) {
            wx.saveImageToPhotosAlbum({
                filePath: file,
                success() {
                    wx.hideLoading();
                    wx.showModal({
                        title: '成功保存图片',
                        content: '已成功为您保存图片到手机相册，请自行前往朋友圈分享',
                        showCancel: false,
                        confirmText: "我知道了",
                        success: function(res) {
                            if (res.confirm) {
                                console.log('用户点击确定')
                            } else if (res.cancel) {
                                console.log('用户点击取消')
                            }
                        }
                    })
                },
                fail() {
                    console.log("fail");
                }
            })






        }


        init(user_id) {

            let that = this;
            API.ysjHome({"userId": user_id,"wz_page":1,"zp_page":1}).then((data) => {
                if (data.success) {
                    that.ysjObj=data.result;
                    that.ysjObj.user_id=user_id;
                    that.pro_list=data.result.zpList;
                    that.content_list=data.result.wz_List;
                    wx.hideLoading()
                    that.historyHidden=false;
                    if(that.ysjObj.upCodeOne=='0'){
                        that.padding=true
                    }
                    that.$apply();
                }
            })


        }


    }
</script>